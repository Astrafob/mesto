(()=>{"use strict";const e={formSelector:".popup__edit-form",inputSelector:".popup__input-text",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button-type-inactive",inputErrorBorderClass:"popup__input-text_type_error",inputErrorClass:"popup__input-error",errorClass:"popup__input-error_visible"};class t{constructor(e,t,s,i,r,n){this._title=e.name,this._link=e.link,this.idCard=e._id,this._idUser=e.idUser,this._isOwner=e.owner,this.arrLikes=e.likes,this._templateSelector=t,this._handleLike=r,this._handleLikeDelete=n,this._imageClickHandler=s,this._deleteCardHandler=i,this._newCard=this._createCardElement(),this._newCard.isLiked=e.isLiked,this._likeButton=this._newCard.querySelector(".card__button-like"),this._likeCounter=this._newCard.querySelector(".card__like-counter"),this._deleteButton=this._newCard.querySelector(".card__delete"),this._viewImage=this._newCard.querySelector(".card__image")}_createCardElement(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}_setData(){const e=this._newCard.querySelector(".card__image"),t=this._newCard.querySelector(".card__title");e.alt=this._title,e.src=this._link,t.textContent=this._title,this._newCard.id=this.idCard,this._newCard.owner=this._isOwner,this.arrLikes.find((e=>e._id===this._idUser))?(this._newCard.isLiked=!0,this._likeButton.classList.add("card__button-like_active")):(this._newCard.isLiked=!1,this._likeButton.classList.remove("card__button-like_active")),this._newCard.owner._id===this._idUser?this._newCard.isMine=!0:(this._newCard.isMine=!1,this._deleteButton.style="visibility: hidden;"),this._likeCounter.textContent=this.arrLikes.length}deleteCardElement(){this._newCard.remove(),this._newCard=null}likeCard(e,t){t?this._handleLikeDelete(e):this._handleLike(e)}setLike(e){console.log(e.likes),e.likes.find((e=>e._id===this._idUser))?(this._newCard.isLiked=!0,this._likeButton.classList.add("card__button-like_active")):(this._newCard.isLiked=!1,this._likeButton.classList.remove("card__button-like_active")),this._likeCounter.textContent=e.likes.length}_setEventListeners(){this._deleteButton.addEventListener("click",(()=>{this._deleteCardHandler(this)})),this._likeButton.addEventListener("click",(()=>{this.likeCard(this,this._newCard.isLiked)})),this._viewImage.addEventListener("click",(()=>{this._imageClickHandler(this._title,this._link)}))}getCard(){return this._setData(),this._setEventListeners(),this._newCard}}class s{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorBorderClass=e.inputErrorBorderClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=Array.from(t.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.add(this._errorClass),t.textContent=e.validationMessage,e.classList.add(this._inputErrorBorderClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.remove(this._errorClass),t.textContent="",e.classList.remove(this._inputErrorBorderClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._form.addEventListener("reset",(()=>{setTimeout((()=>{this._toggleButtonState()}),0)})),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._buttonElement.disabled=!0,this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}class i{constructor(e){this._popup=e,this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.addEventListener("click",(e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close-button"))&&this.close()}))}}class r extends i{constructor(e,t){super(e),this._callbackSubmitForm=t,this._elementForm=this._popup.querySelector(".popup__edit-form"),this._inputList=this._popup.querySelectorAll(".popup__input-text"),this._submitButton=this._elementForm.querySelector(".popup__save-button")}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}addSaveState(){this._submitButton.textContent="Сохранение..."}addStandartState(){this._submitButton.textContent="Сохранить"}setInputValues(e){console.log(e),console.log(this._inputList),this._inputList.forEach((t=>{t.value=e[t.name],console.log(t.value)}))}setEventListeners(){super.setEventListeners(),this._elementForm.addEventListener("submit",(e=>{e.preventDefault(),this._objectInputs=this._getInputValues(),console.log(this._objectInputs),this._callbackSubmitForm(this._objectInputs),this.close()}))}close(){super.close(),this._elementForm.reset()}}const n=document.querySelector("#popupEditProfile"),o=document.querySelector("#popupAddCard"),a=document.querySelector("#popupEditAvatarProfile"),l=document.querySelector("#popupViewPhoto"),d=document.querySelector("#popupDeleteCard"),h=document.querySelector(".profile"),_=document.querySelector(".cards"),u=h.querySelector(".button_edit_open"),c=h.querySelector(".button_add_open"),p=h.querySelector(".profile__avatar-edit"),m=h.querySelector(".profile__title"),C=h.querySelector(".profile__subtitle"),v=h.querySelector(".profile__photo"),S=(n.querySelector("#name"),n.querySelector("#about"),new s(e,n)),k=new s(e,o),L=new s(e,a),E=new class{constructor({renderer:e},t){this._container=t,this._renderer=e}rendererItems(e){this._items=e,this._items.forEach((e=>{this._renderer(e)}))}addItemAppend(e){this._container.append(e)}addItemPrepend(e){this._container.prepend(e)}}({renderer:e=>{E.addItemAppend(B(e))}},_),b=new class extends i{constructor(e){super(e),this._popupImage=this._popup.querySelector(".popup__image"),this._popupCaptionImage=this._popup.querySelector(".popup__caption-image")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupCaptionImage.textContent=e,super.open()}}(l),f=new r(n,(function(e){f.addSaveState(),q.editProfile(e).then((e=>{I.setUserInfo(e),f.close()})).catch((e=>{console.log(e)})).finally((()=>{f.addStandartState()}))})),g=new r(o,(function(e){g.addSaveState(),q.addCard(e).then((e=>{g.close(),E.addItemPrepend(B(e))})).catch((e=>{console.log(e)})).finally((()=>{g.addStandartState()}))})),y=new r(a,(function(e){y.addSaveState(),q.editProfileImage(e).then((t=>{console.log(e),y.close(),I.setUserAvatar(t)})).catch((e=>{console.log(e)})).finally((()=>{y.addStandartState()}))})),w=new class extends i{constructor(e){super(e),this._elementForm=this._popup.querySelector(".popup__edit-form"),this._inputList=this._popup.querySelectorAll(".popup__input-text"),this._saveButton=this._elementForm.querySelector(".popup__save-button")}handleFormSubmit(e){this._submit=e}addSaveState(){this._saveButton.textContent="Удаление..."}addStandartState(){this._saveButton.textContent="Да"}setEventListeners(){super.setEventListeners(),this._elementForm.addEventListener("submit",(e=>{e.preventDefault(),this._submit()}))}}(d),I=new class{constructor({name:e,about:t},s){this._name=e,this._about=t,this._imageProfile=s}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._data=e,this._name.textContent=e.name,this._about.textContent=e.about}setUserAvatar(e){this._data=e,this._imageProfile.src=this._data.avatar}getPersonId(){return this._idUser=this._data._id,this._idUser}}({name:m,about:C},v),q=new class{constructor(e){this._url=e.url,this._headers=e.headers}getCards(){return fetch(`${this._url}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getPersonInfo(){return fetch(`${this._url}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}editProfileImage(e){return fetch(`${this._url}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then(this._checkResponse)}editProfile(e){return fetch(`${this._url}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}addCard(e){return fetch(`${this._url}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._checkResponse)}addLikeCard(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteLikeCard(e){return fetch(`${this._url}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._url}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Получили ошибку: ${e.status} ${e.statusText}`)}}({url:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"c9936e4c-070a-4b7d-9c19-b49f7cce0362","Content-Type":"application/json"}});Promise.all([q.getPersonInfo(),q.getCards()]).then((([e,t])=>{I.setUserInfo(e),I.setUserAvatar(e),E.rendererItems(t)})).catch((e=>{console.log(e)}));const B=e=>(e.idUser=I.getPersonId(),new t(e,"#card",x,V,P,U).getCard()),x=(e,t)=>{b.open(e,t)},P=e=>{console.log(e.idCard),q.addLikeCard(e.idCard).then((t=>{console.log(t),e.setLike(t)})).catch((e=>{console.log(e)}))},U=e=>{q.deleteLikeCard(e.idCard).then((t=>{e.setLike(t)})).catch((e=>{console.log(e)}))};function V(e){w.open(),w.handleFormSubmit((function(){w.addSaveState(),q.deleteCard(e.idCard).then((()=>{e.deleteCardElement()})).then((()=>{w.close()})).catch((e=>{console.log(e)})).finally((()=>{w.addStandartState()}))}))}u.addEventListener("click",(()=>{f.setInputValues(I.getUserInfo()),f.open()})),c.addEventListener("click",(()=>{g.open()})),p.addEventListener("click",(()=>{y.open()})),S.enableValidation(),k.enableValidation(),L.enableValidation(),f.setEventListeners(),g.setEventListeners(),b.setEventListeners(),y.setEventListeners(),w.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,